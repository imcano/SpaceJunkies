{"version":3,"sources":["components/Header.js","components/EditBar.js","components/Container.js","components/AddWidgetDialog.js","components/CustomFrame.js","Wrapper/JoyStick.js","components/widgets/JoyStickWidget.js","components/widgets/Camera.js","components/widgets/Log.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","EditBar","_ref","onEdit","type","onClick","aria-hidden","Container","children","AddWidgetDialog","widgets","isModalOpen","onRequestClose","onWidgetSelect","widgetItems","Object","keys","map","widget","key","href","title","react_modal_lib_default","isOpen","CustomFrame","onRemove","editable","JoyStick","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","joyRef","React","createRef","manager","nipplejs","create","objectSpread","options","zone","current","managerListener","manager2","ref","style","containerStyle","Component","defaultProps","mode","catchDistance","color","width","height","position","background","joyOptions","top","left","JoyWrapper","bind","assertThisInitialized","managerListener2","state","rasberyPy","_this2","window","location","host","socket","WebSocket","onmessage","event","data","JSON","parse","setState","rp_status","document","addEventListener","defaultPrevented","keyCode","send","stringify","direction","_this3","on","e","stick","angle","_this4","Fragment","Wrapper_JoyStick","Camera","canvas","getElementById","JSMpeg","Player","cameraStyle","paddingLeft","paddingRight","marginLeft","marginRight","display","id","Log","App","layout","onAdd","rowIndex","columnIndex","addWidgetOptions","onMove","toggleEdit","editMode","handleWidgetSelection","widgetName","_this$state$addWidget","addWidget","rows","columns","components_Container","components_AddWidgetDialog","components_Header","components_EditBar","lib_default","frameComponent","addWidgetComponentText","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.226eaaba.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"top_nav\">\n        <div className=\"nav_menu\">\n            <nav className=\"dashboardHeader\">\n                {/* <img src={require('../assets/Dazzle.png')} height=\"40px\"/> */}\n            </nav>\n        </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst EditBar = ({ onEdit }) => {\n  return (\n    <div className=\"row edit-bar\">\n      <div className=\"col-sm-12 text-right\">\n        <button type=\"button\" className=\"btn btn-default btn-xs\" onClick={onEdit}>\n          <span className=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>\n            Edit\n          </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditBar;\n","import React from 'react';\n\nconst Container = ({children}) => {\n  return (\n    <div className=\"container body\">\n      <div className=\"main_container\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\n\nexport default Container;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst AddWidgetDialog = ({ widgets, isModalOpen, onRequestClose, onWidgetSelect}) => {\n  const widgetItems = Object.keys(widgets).map((widget, key) => {\n    return (\n      <div key={key} className=\"list-group\">\n        <a href className=\"list-group-item\" onClick={() => onWidgetSelect(widget)}>\n          <h6 className=\"list-group-item-heading\">{widgets[widget].title}</h6>\n        </a>\n      </div>\n    );\n  });\n  return (\n    <Modal\n      className=\"Modal__Bootstrap modal-dialog\"\n      isOpen={isModalOpen}>\n      <div className=\"modal-content\">\n       <div className=\"modal-header\">\n         <button type=\"button\" className=\"close\" onClick={onRequestClose}>\n           <span aria-hidden=\"true\">&times;</span>\n           <span className=\"sr-only\">Close</span>\n         </button>\n         <h4 className=\"modal-title\">Add a widget</h4>\n       </div>\n       <div className=\"modal-body\">\n         <h5>Pick a widget to add</h5>\n         {widgetItems}\n       </div>\n       <div className=\"modal-footer\">\n         <button type=\"button\" className=\"btn btn-default\" onClick={onRequestClose}>Close</button>\n       </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddWidgetDialog;\n","import React from 'react';\n\nconst CustomFrame = ({children, onRemove, editable, title}) => {\n  return (\n    <div className=\"x_panel fixed_height_320\">\n      <div className=\"x_title\">\n          <h2>{title}</h2>\n          <ul className=\"nav navbar-right panel_toolbox\">\n            {editable && \n              <li>\n                <a href onClick={() => {onRemove();}} className=\"close-link\">\n                  <span className=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n                </a>\n              </li>}\n          </ul>\n          <div className=\"clearfix\"></div>\n      </div>\n      <div className=\"x_content\">\n        {children}\n      </div>\n  </div>\n);\n};\n\n\nexport default CustomFrame;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport nipplejs from 'nipplejs';\n\nclass JoyStick extends Component {\n  constructor(props) {\n    super(props);\n    this.joyRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.manager = nipplejs.create({ ...this.props.options, zone: this.joyRef.current });\n    this.props.managerListener(this.manager);\n    this.manager2 = nipplejs.create({ ...this.props.options, zone: this.joyRef.current });\n    this.props.managerListener(this.manager2);\n  }\n\n  render() {\n    return (\n      <div ref={this.joyRef} style={this.props.containerStyle} />\n    );\n  }\n}\n\nJoyStick.defaultProps = {\n  options: {\n    mode: 'semi',\n    catchDistance: 150,\n    color: 'white',\n  },\n  containerStyle: {\n    width: '100%',\n    height: '50vh',\n    position: 'relative',\n    background: 'linear-gradient(to right, #E684AE, #79CBCA, #77A1D3)',\n  },\n};\n\nJoyStick.propTypes = {\n  managerListener: PropTypes.func.isRequired,\n  options: PropTypes.shape({\n    mode: PropTypes.string,\n    catchDistance: PropTypes.number,\n    color: PropTypes.string,\n  }),\n  containerStyle: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    position: PropTypes.string,\n    background: PropTypes.string,\n  }),\n};\n\nexport default JoyStick;","import React, {Component} from 'react';\n\nimport JoyStick from '../../Wrapper/JoyStick';\n\nconst joyOptions = {\n    mode: 'static',\n\tcatchDistance: 150,\n\tcolor: 'white',\n\tposition: {top: '50%', left: '50%'}\n}\n\nconst containerStyle = {\n\tposition: 'relative',\n    height: '150px',\n    width: '100%',\n    background: 'black'\n}\n\nclass JoyWrapper extends Component {\n    constructor() {\n        super();\n        this.managerListener = this.managerListener.bind(this);\n        this.managerListener2 = this.managerListener2.bind(this);\n        this.state = {\n            rasberyPy: false\n        }\n    }\n    componentDidMount(){\n        if (window.location.host === \"localhost:3000\") {\n            this.socket = new WebSocket('ws://localhost:3030')\n        } else {\n            //change to our IP address\n            this.socket = new WebSocket('ws://142.93.25.132:3030')\n        }\n        this.socket.onmessage =  (event) => {\n            const data = JSON.parse(event.data);\n            if (data.type === \"users\") {\n                this.setState({rasberyPy: data.rp_status});\n            }\n        }\n        document.addEventListener('keydown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n\n            let key = event.key || event.keyCode\n\n            if(key === ' ') {\n                this.socket.send(JSON.stringify({direction: \"stop\"}))\n            }\n            if(key === 'W' || key === 'w') {\n                this.socket.send(JSON.stringify({direction: 'up'}))\n            }\n            if(key === 'A' || key === 'a') {\n                this.socket.send(JSON.stringify({direction: \"left\"}))\n            }\n            if(key === 'S' || key === 's') {\n                this.socket.send(JSON.stringify({direction: \"down\"}))\n            }\n            if(key === 'D' || key === 'd') {\n                this.socket.send(JSON.stringify({direction: \"right\"}))\n            }\n            if(key === 'Q' || key === 'q') {\n                this.socket.send(JSON.stringify({direction: \"rotateX\"}))\n            }\n            if(key === 'E' || key === 'e') {\n                this.socket.send(JSON.stringify({direction: \"rotateY\"}))\n            }\n        })\n    }\n    managerListener(manager) {\n        manager.on('move', (e, stick) => {\n            if (stick.direction) {\n                this.socket.send(JSON.stringify({direction: stick.direction.angle}));\n            }\n        })\n        manager.on('end', () => {\n\t\t\tthis.socket.send(JSON.stringify({direction: 'stop'}));\n        })\n        \n    }\n\n    managerListener2(manager) {\n        manager.on('move', (e, stick) => {\n            if (stick.direction.angle === 'up' || stick.direction.angle === 'down') {\n                this.socket.send(JSON.stringify({direction: \"rotateY\"}));\n            }\n            if (stick.direction.angle === 'left' || stick.direction.angle === 'right') {\n                this.socket.send(JSON.stringify({direction: \"rotateX\"}));\n            }\n        })\n        manager.on('end', () => {\n\t\t\tthis.socket.send(JSON.stringify({direction: 'stop'}));\n        })\n        \n    }\n\n    render() {\n        const { rasberyPy } = this.state;\n        return (\n            <div>\n                { rasberyPy ?\n                    <React.Fragment>\n                        <h2 className='text-center'>Direction</h2>\n                        <JoyStick options={joyOptions} containerStyle={containerStyle} managerListener={this.managerListener} />,\n                        <h2 className='text-center'>Rotation</h2>\n                        <JoyStick options={joyOptions} containerStyle={containerStyle} managerListener={this.managerListener2} />\n                    </React.Fragment>\n                    :\n                    <h1>Connect RP</h1>\n                }\n            </div>\n        )\n    }\n}\n\nexport default JoyWrapper;","import React, { Component } from 'react';\nimport JSMpeg from 'jsmpeg-player';\n\nclass Camera extends Component {\n  \n\n  componentDidMount() {\n    const canvas = document.getElementById('video-canvas');\n    const url = 'ws://142.93.25.132:8082/';\n    const player = new JSMpeg.Player(url, {canvas: canvas});\n  }\n  \n  render() {\n    this.cameraStyle  = {\n      paddingLeft: 0,\n      paddingRight: 0,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      display: \"block\",\n      width: \"100%\",\n      height: \"100%\"\n    }\n    return (\n      <div>\n\t\t  <h1>Camera</h1>\n      <canvas style={this.cameraStyle} id=\"video-canvas\" ></canvas>\n\t  </div>\n    );\n  }\n}\n\nexport default Camera;\n","import React, { Component } from 'react';\n\n\nclass Log extends Component {\n  \n  render() {\n    return (\n      <div>\n\t\t    <h1>Log</h1>\n\t    </div>\n    );\n  }\n}\n\nexport default Log;\n","import React, { Component } from 'react';\nimport Dashboard, { addWidget } from 'react-dazzle';\n\n// App components\nimport Header from './components/Header';\nimport EditBar from './components/EditBar';\nimport Container from './components/Container';\nimport AddWidgetDialog from './components/AddWidgetDialog';\nimport CustomFrame from './components/CustomFrame';\n\n// Widgets of the dashboard.\nimport JoyStick from './components/widgets/JoyStickWidget';\nimport Camera from './components/widgets/Camera';\nimport Log from './components/widgets/Log';\n// import LineChart from './widgets/LineChart';\n// import DoughnutChart from './widgets/DoughnutChart';\n\n// We are using bootstrap as the UI library\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// Default styes of dazzle.\nimport 'react-dazzle/lib/style/style.css';\n\n// Our styles\nimport './styles/custom.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Widgets that are available in the dashboard\n      widgets: {\n        Log: {\n          type: Log,\n          title: 'Log',\n        },\n        JoyStick: {\n          type: JoyStick,\n          title: 'Joy Stick',\n        },\n        Camera: {\n          type: Camera,\n          title: 'Camera',\n        },\n      },\n      // Layout of the dashboard\n      layout: {\n        rows: [{\n          columns: [{\n            className: 'col-md-12 col-sm-12 col-xs-12',\n            widgets: [{key: 'Camera'}],\n          }],\n        }, {\n          columns: [{\n            className: 'col-md-8 col-sm-8 col-xs-8',\n            widgets: [{key: 'Log'}],\n          }, {\n            className: 'col-md-4 col-sm-4 col-xs-4',\n            widgets: [{key: 'JoyStick'}],\n          }],\n        }],\n      },\n      editMode: false,\n      isModalOpen: false,\n      addWidgetOptions: null,\n    };\n  }\n\n  /**\n   * When a widget is removed, the layout should be set again.\n   */\n  onRemove = (layout) => {\n    this.setState({\n      layout: layout,\n    });\n  }\n\n  /**\n   * Adds new widgget.\n   */\n  onAdd = (layout, rowIndex, columnIndex) => {\n    // Open the AddWidget dialog by seting the 'isModalOpen' to true.\n    // Also preserve the details such as the layout, rowIndex, and columnIndex  in 'addWidgetOptions'.\n    //  This will be used later when user picks a widget to add.\n    this.setState({\n      isModalOpen: true,\n      addWidgetOptions: {\n        layout,\n        rowIndex,\n        columnIndex,\n      },\n    });\n  }\n\n  /**\n   * When a widget moved, this will be called. Layout should be given back.\n   */\n  onMove = (layout) => {\n    this.setState({\n      layout: layout,\n    });\n  }\n\n  /**\n   * This will be called when user tries to close the modal dialog.\n   */\n  onRequestClose = () => {\n    this.setState({\n      isModalOpen: false,\n    });\n  }\n\n  render() {\n    return (\n    <Container>\n      <AddWidgetDialog widgets={this.state.widgets} isModalOpen={this.state.isModalOpen} onRequestClose={this.onRequestClose} onWidgetSelect={this.handleWidgetSelection}/>\n      <Header />\n      <EditBar onEdit={this.toggleEdit} />\n      <Dashboard\n        frameComponent={CustomFrame}\n        onRemove={this.onRemove}\n        layout={this.state.layout}\n        widgets={this.state.widgets}\n        editable={this.state.editMode}\n        onAdd={this.onAdd}\n        onMove={this.onMove}\n        addWidgetComponentText=\"Add New Widget\"\n        />\n\n    </Container>\n    );\n  }\n\n  /**\n   * Toggeles edit mode in dashboard.\n   */\n  toggleEdit = () => {\n    this.setState({\n      editMode: !this.state.editMode,\n    });\n  };\n\n  /**\n   * When user selects a widget from the modal dialog, this will be called.\n   * By calling the 'addWidget' method, the widget could be added to the previous requested location.\n   */\n  handleWidgetSelection = (widgetName) => {\n    const {layout, rowIndex, columnIndex} = this.state.addWidgetOptions;\n\n    /**\n     * 'AddWidget' method gives you the new layout.\n     */\n    this.setState({\n      layout: addWidget(layout, rowIndex, columnIndex, widgetName),\n    });\n\n    // Close the dialogbox\n    this.onRequestClose();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}